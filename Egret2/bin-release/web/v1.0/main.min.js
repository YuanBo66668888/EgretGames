var __reflect = this && this.__reflect ||
function(t, e, i) {
    t.__class__ = e,
    i ? i.push(e) : i = [e],
    t.__types__ = t.__types__ ? i.concat(t.__types__) : i
},
__extends = this && this.__extends ||
function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var s in e) e.hasOwnProperty(s) && (t[s] = e[s]);
    t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i)
},
LoadingUI = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.createView(),
        e
    }
    return __extends(e, t),
    e.prototype.createView = function() {
        this.textField = new egret.TextField,
        this.addChild(this.textField),
        this.textField.y = 300,
        this.textField.width = 480,
        this.textField.height = 100,
        this.textField.textAlign = "center"
    },
    e.prototype.setProgress = function(t, e) {
        this.textField.text = "Loading..." + t + "/" + e
    },
    e
} (egret.Sprite);
__reflect(LoadingUI.prototype, "LoadingUI");
var Main = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.bottom = 416,
        e.objs = new Array,
        e.GameOver = !1,
        e.Xsleep = 0,
        e.Ysleep = 0,
        e.Zsleep = .98,
        e.Tyshu = 0,
        e.Gstart = !1,
        e.addEventListener(egret.Event.ADDED_TO_STAGE, e.onAddToStage, e),
        e
    }
    return __extends(e, t),
    e.prototype.onAddToStage = function(t) {
        this.loadingView = new LoadingUI,
        this.stage.addChild(this.loadingView),
        RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.loadConfig("resource/resource.json", "resource/")
    },
    e.prototype.onConfigComplete = function(t) {
        RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
        RES.addEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, this.onItemLoadError, this),
        RES.loadGroup("preload")
    },
    e.prototype.onResourceLoadComplete = function(t) {
        "preload" == t.groupName && (this.stage.removeChild(this.loadingView), RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this), RES.removeEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this), RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this), RES.removeEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, this.onItemLoadError, this), this.init())
    },
    e.prototype.onItemLoadError = function(t) {
        console.warn("Url:" + t.resItem.url + " has failed to load")
    },
    e.prototype.onResourceLoadError = function(t) {
        console.warn("Group:" + t.groupName + " has failed to load"),
        this.onResourceLoadComplete(t)
    },
    e.prototype.onResourceProgress = function(t) {
        "preload" == t.groupName && this.loadingView.setProgress(t.itemsLoaded, t.itemsTotal)
    },
    e.prototype.createBitmapByName = function(t) {
        var e = new egret.Bitmap,
        i = RES.getRes(t);
        return e.texture = i,
        e
    },
    e.prototype.init = function() {
        for (var t = 0; 4 > t; t++) this.bg = this.createBitmapByName("tile_bg"),
        this.addChild(this.bg),
        this.bg.x = this.bg.width * t;
        this.finish = this.createBitmapByName("finish"),
        this.addChild(this.finish),
        this.finish.x = 1e3,
        this.finish.y = this.bottom - this.finish.height;
        for (var e = 1; 4 > e; e++) {
            var i = this.createBitmapByName("object_0" + e);
            this.addChild(i),
            i.x = 150 + 200 * e,
            i.y = this.bottom - i.height,
            this.objs.push(i)
        }
        this.GstatrTip = this.createBitmapByName("tapToStart"),
        this.addChild(this.GstatrTip),
        this.GstatrTip.x = 230,
        this.GstatrTip.y = this.bottom - this.GstatrTip.height - 50,
        this.GupTip = this.createBitmapByName("tapToJump"),
        this.addChild(this.GupTip),
        this.GupTip.x = 230,
        this.GupTip.y = this.bottom - this.GupTip.height,
        this.GupTip.visible = !1,
        this.boy = this.createBitmapByName("green_boy"),
        this.addChild(this.boy),
        this.boy.x = 200,
        this.boy.y = this.bottom - this.boy.height,
        this.addEventListener(egret.Event.ENTER_FRAME, this.onEnterFrame, this),
        this.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.TouchBegin, this),
        this.touchEnabled = !0,
        this.startLoad()
    },
    e.prototype.onEnterFrame = function(t) {
        this.Gstart && !this.GameOver && (this.GupTip.x = this.boy.x + 50, this.Ysleep += this.Zsleep, this.boy.x += this.Xsleep, this.boy.y += this.Ysleep, this.boy.y >= this.bottom - this.boy.height && (this.boy.y = this.bottom - this.boy.height, this.Ysleep = 0, this.Tyshu = 0), this.testobjecs())
    },
    e.prototype.TouchBegin = function(t) {
        return this.Gstart ? this.Tyshu < 2 && (this.GupTip.visible = !1, this.Ysleep = -14, this.Tyshu++) : (this.Gstart = !0, this.Xsleep = 2, this.GstatrTip.visible = !1, this.GupTip.visible = !0),
        this.GameOver ? (this.GameOver = !1, this.GstatrTip.visible = !0, this.GupTip.visible = !1, this.boy.x = 200, void(this.boy.y = this.bottom - this.boy.height)) : void 0
    },
    e.prototype.testobjecs = function() {
        for (var t = 0; t < this.objs.length; t++) {
            var e = this.objs[t];
            this.testboy(e) && (alert("你屎了,点击鼠标重新开始"), this.GameOver = !0)
        }
    },
    e.prototype.testboy = function(t) {
        return t.hitTestPoint(this.boy.x + .5 * this.boy.width, this.boy.y + .5 * this.boy.height)
    },
    e.prototype.startLoad = function() {
        var t = new egret.Sound,
        e = "resource/assets/bg.mp3";
        t.addEventListener(egret.Event.COMPLETE, this.onLoadComplete, this),
        t.load(e)
    },
    e.prototype.onLoadComplete = function(t) {
        var e = t.target,
        i = e.play(0, 0);
        i.addEventListener(egret.Event.SOUND_COMPLETE, this.onSoundComplete, this)
    },
    e.prototype.onSoundComplete = function(t) {
        egret.log("onSoundComplete")
    },
    e
} (egret.DisplayObjectContainer);
__reflect(Main.prototype, "Main");